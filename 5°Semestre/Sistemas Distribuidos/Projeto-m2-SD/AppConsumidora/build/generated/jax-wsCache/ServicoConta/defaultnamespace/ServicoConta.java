
package defaultnamespace;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ServicoConta", targetNamespace = "http://DefaultNamespace")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServicoConta {


    /**
     * 
     * @param idConta
     * @param valorDeDeposito
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(name = "depositarContaReturn", targetNamespace = "http://DefaultNamespace")
    @RequestWrapper(localName = "depositarConta", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.DepositarConta")
    @ResponseWrapper(localName = "depositarContaResponse", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.DepositarContaResponse")
    public double depositarConta(
        @WebParam(name = "idConta", targetNamespace = "http://DefaultNamespace")
        int idConta,
        @WebParam(name = "valorDeDeposito", targetNamespace = "http://DefaultNamespace")
        double valorDeDeposito);

    /**
     * 
     * @param senha
     * @param nome
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(name = "criarContaReturn", targetNamespace = "http://DefaultNamespace")
    @RequestWrapper(localName = "criarConta", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.CriarConta")
    @ResponseWrapper(localName = "criarContaResponse", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.CriarContaResponse")
    public boolean criarConta(
        @WebParam(name = "nome", targetNamespace = "http://DefaultNamespace")
        String nome,
        @WebParam(name = "senha", targetNamespace = "http://DefaultNamespace")
        String senha);

    /**
     * 
     * @param idConta
     * @param valorDeSaque
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(name = "sacarContaReturn", targetNamespace = "http://DefaultNamespace")
    @RequestWrapper(localName = "sacarConta", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.SacarConta")
    @ResponseWrapper(localName = "sacarContaResponse", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.SacarContaResponse")
    public double sacarConta(
        @WebParam(name = "idConta", targetNamespace = "http://DefaultNamespace")
        int idConta,
        @WebParam(name = "valorDeSaque", targetNamespace = "http://DefaultNamespace")
        double valorDeSaque);

    /**
     * 
     * @param idConta
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(name = "consultarDadosContaReturn", targetNamespace = "http://DefaultNamespace")
    @RequestWrapper(localName = "consultarDadosConta", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.ConsultarDadosConta")
    @ResponseWrapper(localName = "consultarDadosContaResponse", targetNamespace = "http://DefaultNamespace", className = "defaultnamespace.ConsultarDadosContaResponse")
    public List<String> consultarDadosConta(
        @WebParam(name = "idConta", targetNamespace = "http://DefaultNamespace")
        int idConta);

}
